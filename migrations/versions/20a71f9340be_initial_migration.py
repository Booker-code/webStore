"""Initial migration.

Revision ID: 20a71f9340be
Revises: 
Create Date: 2024-06-12 18:42:14.562274

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '20a71f9340be'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('product')
    with op.batch_alter_table('order', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('user_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False)
        batch_op.alter_column('total_amount',
               existing_type=mysql.FLOAT(),
               nullable=False)
        batch_op.alter_column('status',
               existing_type=mysql.VARCHAR(length=20),
               nullable=False)
        batch_op.create_foreign_key(None, 'user', ['user_id'], ['id'])

    with op.batch_alter_table('order_item', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('order_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False)
        batch_op.alter_column('product_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False)
        batch_op.alter_column('quantity',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False)
        batch_op.alter_column('price',
               existing_type=mysql.FLOAT(),
               nullable=False)
        batch_op.create_foreign_key(None, 'order', ['order_id'], ['id'])
        batch_op.create_foreign_key(None, 'products', ['product_id'], ['id'])

    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('name',
               existing_type=mysql.TEXT(),
               type_=sa.String(length=100),
               nullable=False)
        batch_op.alter_column('price',
               existing_type=mysql.TEXT(),
               type_=sa.Float(),
               nullable=False)
        batch_op.alter_column('photo',
               existing_type=mysql.TEXT(),
               type_=sa.String(length=200),
               nullable=False)
        batch_op.alter_column('type',
               existing_type=mysql.TEXT(),
               type_=sa.String(length=64),
               existing_nullable=True)
        batch_op.create_index(batch_op.f('ix_products_type'), ['type'], unique=False)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('username',
               existing_type=mysql.VARCHAR(length=64),
               nullable=False)
        batch_op.alter_column('email',
               existing_type=mysql.VARCHAR(length=120),
               nullable=False)
        batch_op.alter_column('password_hash',
               existing_type=mysql.VARCHAR(length=128),
               nullable=False)
        batch_op.alter_column('address',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=200),
               existing_nullable=True)
        batch_op.create_unique_constraint(None, ['email'])
        batch_op.create_unique_constraint(None, ['username'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('address',
               existing_type=sa.String(length=200),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.alter_column('password_hash',
               existing_type=mysql.VARCHAR(length=128),
               nullable=True)
        batch_op.alter_column('email',
               existing_type=mysql.VARCHAR(length=120),
               nullable=True)
        batch_op.alter_column('username',
               existing_type=mysql.VARCHAR(length=64),
               nullable=True)
        batch_op.alter_column('id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_products_type'))
        batch_op.alter_column('type',
               existing_type=sa.String(length=64),
               type_=mysql.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('photo',
               existing_type=sa.String(length=200),
               type_=mysql.TEXT(),
               nullable=True)
        batch_op.alter_column('price',
               existing_type=sa.Float(),
               type_=mysql.TEXT(),
               nullable=True)
        batch_op.alter_column('name',
               existing_type=sa.String(length=100),
               type_=mysql.TEXT(),
               nullable=True)
        batch_op.alter_column('id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('order_item', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('price',
               existing_type=mysql.FLOAT(),
               nullable=True)
        batch_op.alter_column('quantity',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True)
        batch_op.alter_column('product_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True)
        batch_op.alter_column('order_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True)
        batch_op.alter_column('id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('order', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('status',
               existing_type=mysql.VARCHAR(length=20),
               nullable=True)
        batch_op.alter_column('total_amount',
               existing_type=mysql.FLOAT(),
               nullable=True)
        batch_op.alter_column('user_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True)
        batch_op.alter_column('id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True,
               autoincrement=True)

    op.create_table('product',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('name', mysql.VARCHAR(length=100), nullable=True),
    sa.Column('category', mysql.VARCHAR(length=50), nullable=True),
    sa.Column('price', mysql.FLOAT(), nullable=True),
    sa.Column('image_url', mysql.VARCHAR(length=200), nullable=True),
    sa.Column('created_at', mysql.DATETIME(), nullable=True),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    # ### end Alembic commands ###
